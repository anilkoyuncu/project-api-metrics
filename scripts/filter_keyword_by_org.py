#!/usr/bin/env python

# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
# Author: Dawn M. Foster <fosterd@vmware.com>

""" Filter results obtained from keyword_by_repo.py to a subset of orgs

This script uses the results from a keyword search and filters it based
on a list of GitHub organizations. 

As input, this script requires a file generated by the keyword_by_repo.py
script. This is provided via a command line argument.
Example: filter_keyword_by_org.py /path/to/keyword_search_2022-07-26.csv

If a command line argument is not specified, you will be prompted for this
file.

As input, this script requires a file named 'orgs.txt' containing
the name of one GitHub org per line residing in the same folder 
as this script.

As output:
* the script creates a csv file stored in an subdirectory
  of the folder with the script called "output" with the filename in 
  this format with today's date.
  Example: "output/keyword_search_org_filter_2022-07-27.csv"
"""

import sys
import csv
from datetime import datetime
from os.path import dirname, join
from common_functions import read_orgs 

# Read list of orgs from a file
try:
    org_list = read_orgs('orgs.txt')
except:
    print("Error reading orgs. This script depends on the existance of a file called orgs.txt containing one org per line. Exiting")
    sys.exit()

# read filename from command line or prompt if no arguments were given.
try:
    file_name = str(sys.argv[1])

except:
    print("Please enter the filename for the csv file generated from keyword_by_repo.py (full path)")
    file_name = input("Enter a file name: ")

# open csv file 
with open(file_name) as in_file:
    content = csv.reader(in_file)
    
    # get the csv header line and move to the first result
    header = next(content)

    # find csv results lines that match a GitHub org name from orgs.txt
    # and append the matches to a list
    org_match_list = []
    for line in content:
        if line[0] in org_list:
            org_match_list.append(line)

    # prepare output file and write header and list to csv
    try:
        today = datetime.today().strftime('%Y-%m-%d')
        output_filename = "./output/keyword_search_org_filter_" + today + ".csv"
        current_dir = dirname(__file__)
        file_path = join(current_dir, output_filename)
        with open(file_path, "w") as out_file:
            wr = csv.writer(out_file)
            wr.writerow(header)
            wr.writerows(org_match_list)

    except:
        print('Could not write to csv file. This may be because the output directory is missing or you do not have permissions to write to it. Exiting')

